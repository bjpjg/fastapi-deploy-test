#!/bin/sh

# 提交信息格式校验脚本
# 格式要求: <类型>(<范围>): <描述>
# 示例: fix(auth): 修复登录验证错误

# 提交类型白名单
TYPES=(
  "feat"
  "fix"
  "docs"
  "style"
  "refactor"
  "test"
  "chore"
  "perf"
  "ci"
)

# 获取提交信息文件路径（Git会将提交信息写入临时文件并作为参数传递给钩子）
COMMIT_MSG_FILE=$1

# 读取提交信息内容
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# 正则表达式模式：类型(可选范围): 描述
printf -v ALLOW_TYPE "%s|" "${TYPES[@]}"
PATTERN="^(${ALLOW_TYPE%|})(\(\w{1,20}\))?: (.{1,80})$"

# 跳过Merge提交和rebase操作的校验
if echo "$COMMIT_MSG" | grep -qE '^Merge|^#'; then
  exit 0
fi

# 检查提交信息是否符合格式
if ! echo "$COMMIT_MSG" | grep -qE "$PATTERN"; then
  echo "错误: 提交信息不符合格式要求" >&2
  echo "" >&2
  echo "正确格式: <类型>[(<范围>)]: <描述>" >&2
  echo "字符限制: 范围-限制20字符  描述-限制80字符" >&2
  echo "示例: fix(auth): fix the error for login" >&2
  echo "示例: feat: JIRA-2218 新增权限控制" >&2
  echo "" >&2
  echo "允许的类型:" >&2
  printf -- '- %s\n' "${TYPES[@]}" >&2
  exit 1
fi

exit 0
