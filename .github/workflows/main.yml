name: Deploy FastAPI to Server

on:
  push:
    branches:
      - main
      - dev
      - release/*

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 防止网络超时卡死

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Use variables
        run: |
          echo "remote_host variable : $remote_host"
          echo "remote_user variable : $remote_user"
          echo "remote_key variable : $remote_key"
          echo "vars.prod_deploy.SERVER_IP: ${{ vars.prod_deploy.SERVER_IP }}"
          echo "secrets.SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}"
          echo "secrets.prod_deploy.SSH_PRIVATE_KEY: ${{ secrets.prod_deploy.SSH_PRIVATE_KEY }}"
        
        env:
          remote_host: ${{ vars.SERVER_IP }}
          remote_user: ${{ vars.SERVER_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 设置环境变量
        id: set-env
        run: |
          echo github.ref="${{ github.ref }}"
          echo github.sha="${{ github.sha }}"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "部署目标环境：生产环境"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
            echo "部署目标环境：预发布环境"
          elif [[ "${{ github.ref }}" == refs/heads/feature/* ]]; then
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "部署目标环境：开发环境"
          else
            echo "不支持在此分支部署"
            exit 1
          fi

      - name: Install rsync (for incremental transfer)
        run: sudo apt-get install -y rsync

      - name: Push code to server via rsync
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -arcvz --delete --exclude="*.pyc" --exclude='__pycache__'  --progress   # 增量同步并删除冗余文件
          path: ./                 # 同步当前目录所有文件
          remote_path: /srv/ops/apps/deepiano-api/
          remote_host: 47.93.86.147
          remote_user: ubuntu
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run deployment script on server
        uses: appleboy/ssh-action@master
        with:
          host: 47.93.86.147
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            /srv/ops/bin/ops_deploy.sh      # 执行本地部署脚本
            echo "Deployment completed!"
            
      - name: Run Ansible Playbook
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SERVER_IP }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/workplace/ops/apps
            ansible-playbook -i hosts.d/deepiano-api-hosts.yaml  -l deepiano-api-prod deepiano-api.yml
